name: Build and Publish Webbfolio
on:
    workflow_dispatch:
    push:
        branches:
            - main
        tags:
            - "v*.*.*"
env:
    IMAGE_NAME: ghcr.io/lawebb-org/webbfolio
jobs:
    build-and-push:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5
              with:
                  # list of Docker images to use as base name for tags
                  images: ${{ env.IMAGE_NAME }}
                  # generate Docker tags based on the following events/attributes
                  tags: |
                      type=semver,pattern={{version}}
                      type=raw,value=latest,enable={{is_default_branch}}
                  annotations: |
                      org.opencontainers.image.source=https://github.com/lawebb-org/webbfolio
                      org.opencontainers.image.description="A personal website and portfolio for lawebb built with NextJs"
                  labels: |
                      org.opencontainers.image.source=https://github.com/lawebb-org/webbfolio
                      org.opencontainers.image.description="A personal website and portfolio for lawebb built with NextJs"
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ vars.CR_USERNAME }}
                  password: ${{ secrets.CR_TOKEN }}
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./infra/apps/ui/Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  annotations: ${{ steps.meta.outputs.annotations }}
            - name: Cleanup untagged images
              if: github.ref == 'refs/heads/main'
              env:
                  GH_TOKEN: ${{ secrets.CR_TOKEN }}
                  ORG: ${{ vars.ORG_NAME }}
                  PKG: webbfolio
              run: |
                  set -euo pipefail
                  echo "Fetching untagged versions..."
                  gh api -H "Accept: application/vnd.github+json" /orgs/${ORG}/packages/container/${PKG}/versions --paginate \
                    | jq -r '.[] | select(.metadata.container.tags|length==0) | .id' > delete_ids.txt
                  if [ ! -s delete_ids.txt ]; then
                      echo "No untagged versions."
                      exit 0
                  fi
                  # Limit deletions per run (e.g. 20) to be safe
                  head -n 20 delete_ids.txt | while read id; do
                      echo "Deleting untagged version id=$id"
                      gh api -X DELETE /orgs/${ORG}/packages/container/${PKG}/versions/$id
                  done
                  echo "Cleanup complete."
