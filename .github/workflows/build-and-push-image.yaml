name: Build and Push Container Image
on:
    workflow_call:
        inputs:
            image_name:
                required: true
                type: string
            image_tag:
                required: false
                type: string
                default: dev
            description:
                required: true
                type: string
            dockerfile:
                required: true
                type: string
            package:
                required: true
                type: string
            context:
                required: false
                type: string
                default: .
        secrets:
            registry_username:
                required: true
            registry_token:
                required: true

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        env:
            IMAGE_NAME: ${{ inputs.image_name }}
            DESCRIPTION: ${{ inputs.description }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.IMAGE_NAME }}
                  tags: |
                      type=semver,pattern={{version}}
                      type=raw,value=${{ inputs.image_tag }}
                  annotations: |
                      org.opencontainers.image.source=${{ github.repositoryUrl }}
                      org.opencontainers.image.description="${{ env.DESCRIPTION }}"
                  labels: |
                      org.opencontainers.image.source=${{ github.repositoryUrl }}
                      org.opencontainers.image.description="${{ env.DESCRIPTION }}"

            - name: Login to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ secrets.registry_username }}
                  password: ${{ secrets.registry_token }}

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  context: ${{ inputs.context }}
                  file: ${{ inputs.dockerfile }}
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  annotations: ${{ steps.meta.outputs.annotations }}

    cleanup:
        needs: build-and-push
        runs-on: ubuntu-latest
        steps:
            - name: Cleanup untagged images
              env:
                  GH_TOKEN: ${{ secrets.registry_token }}
                  ORG: ${{ vars.ORG_NAME }}
                  PKG: ${{ inputs.package }}
              run: |
                  set -euo pipefail
                  echo "Fetching untagged versions..."
                  gh api -H "Accept: application/vnd.github+json" /orgs/${ORG}/packages/container/${PKG}/versions --paginate \
                    | jq -r '.[] | select(.metadata.container.tags|length==0) | .id' > delete_ids.txt
                  if [ ! -s delete_ids.txt ]; then
                      echo "No untagged versions."
                      exit 0
                  fi
                  # Limit deletions per run (e.g. 20) to be safe
                  head -n 20 delete_ids.txt | while read id; do
                      echo "Deleting untagged version id=$id"
                      gh api -X DELETE /orgs/${ORG}/packages/container/${PKG}/versions/$id
                  done
                  echo "Cleanup complete."
